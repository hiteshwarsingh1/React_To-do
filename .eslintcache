[{"D:\\Projects\\react_todo\\src\\components\\main.js":"1","D:\\Projects\\react_todo\\src\\components\\ListItems.js":"2","D:\\Projects\\react_todo\\src\\App.js":"3","D:\\Projects\\react_todo\\src\\index.js":"4"},{"size":2955,"mtime":1610799881176,"results":"5","hashOfConfig":"6"},{"size":2015,"mtime":1610800188767,"results":"7","hashOfConfig":"6"},{"size":382,"mtime":1610800371808,"results":"8","hashOfConfig":"6"},{"size":590,"mtime":1610800369582,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1v89zp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\react_todo\\src\\components\\main.js",["20","21"],"import React,{Component} from \"react\";\r\nimport \"../App.css\";\r\nimport ListItems from \"./ListItems\";\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            items:[],\r\n            curr_item:{\r\n                text:'',\r\n                key:''\r\n            }\r\n            \r\n        }\r\n        this.handleInput=this.handleInput.bind(this);\r\n        this.additem=this.additem.bind(this);\r\n        this.deleteItem=this.deleteItem.bind(this);\r\n        this.completed=this.completed.bind(this);\r\n        this.updateValues=this.updateValues.bind(this);\r\n    }\r\n    handleInput(e){\r\n        this.setState({\r\n            curr_item:{\r\n                text:e.target.value,\r\n                key:Date.now(),\r\n                pos:0\r\n            }\r\n        })\r\n        \r\n    }\r\n    additem(e){\r\n        e.preventDefault();\r\n        const newItem = this.state.curr_item;\r\n        console.log(newItem);\r\n        if(newItem.text!==\"\"){\r\n            const Newitems=[...this.state.items,newItem];//to add new items to list this is called destructuring Assignment\r\n            this.setState({\r\n                items:Newitems,\r\n                curr_item:{\r\n                    text:'',\r\n                    key:''\r\n                }\r\n\r\n            })\r\n        }\r\n        console.log(this.state.items);\r\n    }\r\n    deleteItem(key){\r\n        \r\n            const newList=this.state.items.filter(item=>\r\n                item.key!==key);\r\n            this.setState({\r\n                items:newList\r\n            })\r\n       \r\n        \r\n    }\r\n    completed(selecteditem){\r\n        if(selecteditem.pos===0){\r\n            console.log(\"oye\");\r\n             this.state.items.map(item=>{\r\n                if(item.key===selecteditem.key){\r\n                    item.pos=1;\r\n                }\r\n                \r\n            })\r\n        }\r\n\r\n    }\r\n    updateValues(text,key){\r\n        const items=this.state.items;\r\n        items.map(item=>{\r\n            if(item.key===key){\r\n                item.text=text;\r\n            }\r\n            \r\n        })\r\n        this.setState({\r\n            items: items\r\n        })\r\n        \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Main\">\r\n                <form className=\"mainForm\" onSubmit={this.additem} >\r\n                    <input type=\"text\" placeholder=\"Enter Text\"\r\n                        value={this.state.curr_item.text}\r\n                        onChange={this.handleInput}\r\n\r\n                    /> \r\n                    <button className=\"button\" type=\"submit\">ADD</button>\r\n                </form>\r\n                \r\n                <ListItems \r\n                    className=\"list\"\r\n                items={this.state.items}\r\n                deleteItem={this.deleteItem}\r\n                completed={this.completed}\r\n                updateValues={this.updateValues}>\r\n                </ListItems>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Main;","D:\\Projects\\react_todo\\src\\components\\ListItems.js",["22","23"],"import React,{Component} from \"react\";\r\nimport \"../App.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nfunction ListItems(props){\r\n    const items=props.items;\r\n    const list=items.map(item=>\r\n        {\r\n            if(item.text){\r\n                \r\n                return(\r\n                    \r\n                    <div className=\"list\" key={item.key}>\r\n                        \r\n                            <p>\r\n                            <span>\r\n                                <FontAwesomeIcon \r\n                                className=\"faicons\" \r\n                                onClick={() => {\r\n                                    props.deleteItem(item.key)\r\n                                }} \r\n                                icon=\"handpointright\" />\r\n                             </span>\r\n\r\n                            <input type=\"text\" \r\n                                id={item.key} \r\n                                value={item.text} \r\n                                onChange={(e)=>{\r\n                                    props.updateValues(e.target.value,item.key)\r\n                                    }}\r\n                            />\r\n                            \r\n                            <span>\r\n                                <FontAwesomeIcon \r\n                                className=\"faicons\" \r\n                                onClick={() => {\r\n                                    props.deleteItem(item.key)\r\n                                }} \r\n                                icon=\"trash\" />\r\n                             </span>\r\n                                \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            </p>\r\n                        \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    return(\r\n        <div>\r\n            {list}\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default ListItems;","D:\\Projects\\react_todo\\src\\App.js",["24"],"D:\\Projects\\react_todo\\src\\index.js",[],{"ruleId":"25","severity":1,"message":"26","line":61,"column":39,"nodeType":"27","messageId":"28","endLine":61,"endColumn":41},{"ruleId":"25","severity":1,"message":"26","line":72,"column":23,"nodeType":"27","messageId":"28","endLine":72,"endColumn":25},{"ruleId":"29","severity":1,"message":"30","line":1,"column":15,"nodeType":"31","messageId":"32","endLine":1,"endColumn":24},{"ruleId":"25","severity":1,"message":"33","line":6,"column":30,"nodeType":"27","messageId":"34","endLine":6,"endColumn":32},{"ruleId":"29","severity":1,"message":"35","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'logo' is defined but never used."]